name: Generate Test Cases

on:
  workflow_dispatch:
    inputs:
      testname:
        description: 'Test name to generate'
        required: true
        type: string
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  generate-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout gnosis-fixtures repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Clone execution-spec-tests-gnosis repository
      run: |
        git clone https://github.com/NethermindEth/execution-spec-tests-gnosis.git
        cd execution-spec-tests-gnosis
        uv sync --all-extras
        uv run solc-select use 0.8.24 --always-install
    - name: Free up disk space
      uses: jlumbroso/free-disk-space@main
      with:
        large-packages: false
        tool-cache: false
 
    - name: Clone Nethermind repository
      run: |
        git clone https://github.com/NethermindEth/nethermind.git
        cd nethermind
        git checkout feature/t8n-test
      
    - name: Build Nethermind projects
      run: |
        cd nethermind
        dotnet build src/Nethermind/Nethermind.slnx
        dotnet build src/Nethermind/EthereumTests.slnx
        dotnet build tools/Evm/Evm.sln
        
    - name: Set PATH environment variable
      run: |
        echo "PATH=$PATH:$GITHUB_WORKSPACE/nethermind/tools/artifacts/bin/Evm/debug" >> $GITHUB_ENV
        # Make sure the EVM tool is executable
        chmod +x $GITHUB_WORKSPACE/nethermind/tools/artifacts/bin/Evm/debug/Evm
        
    - name: Run test generation
      run: |
        cd $GITHUB_WORKSPACE/execution-spec-tests-gnosis
        # Set default test name
        TEST_NAME="default_test"
        # Override with input if provided
        if [ ! -z "${{ github.event.inputs.testname }}" ]; then
          TEST_NAME="${{ github.event.inputs.testname }}"
        fi
        # Configure execution-spec-tests to use Nethermind's EVM
        export EVM_PATH="$GITHUB_WORKSPACE/nethermind/tools/artifacts/bin/Evm/debug/Evm"
        uv run fill -k "$TEST_NAME"
        
        # Copy generated fixtures to the gnosis-fixtures repository
        cp -r fixtures/* $GITHUB_WORKSPACE/
        
    - name: Create Pull Request with changes
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Auto-generate test cases
        title: 'Auto-generate test cases'
        body: |
          This PR contains automatically generated test cases using Nethermind's t8n-test branch.
          
          Generated by GitHub Actions workflow.
        branch: auto-generate-test-cases-${{ github.run_id }}
        base: ${{ github.ref_name }}
        delete-branch: true
